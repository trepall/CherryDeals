document.addEventListener('DOMContentLoaded', function() {
    const USERS_KEY = 'cherry_global_users';
    const CURRENT_USER_KEY = 'cherry_current_user';

    function guaranteeTestUsers() {
        let users = JSON.parse(localStorage.getItem(USERS_KEY)) || {};
        
        const testUsers = {
            'alex': {
                username: 'alex',
                password: '123456',
                balance: 5000,
                deals: [
                    {
                        id: 'deal_1',
                        description: '–ü—Ä–æ–¥–∞–º iPhone 13 Pro',
                        amount: 45000,
                        currency: 'RUB',
                        details: '–∫–∞—Ä—Ç–∞ 1234 5678 9012 3456',
                        status: 'pending',
                        createdAt: new Date().toLocaleString(),
                        url: window.location.origin + window.location.pathname + '?deal=deal_1'
                    }
                ],
                createdAt: new Date().toISOString()
            },
            'maria': {
                username: 'maria',
                password: '123456',
                balance: 12000,
                deals: [
                    {
                        id: 'deal_2',
                        description: '–£—Å–ª—É–≥–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞',
                        amount: 8000,
                        currency: 'RUB',
                        details: 'telegram: @maria_photo',
                        status: 'pending',
                        createdAt: new Date().toLocaleString(),
                        url: window.location.origin + window.location.pathname + '?deal=deal_2'
                    }
                ],
                createdAt: new Date().toISOString()
            }
        };

        let hasChanges = false;
        for (const [username, userData] of Object.entries(testUsers)) {
            if (!users[username]) {
                users[username] = userData;
                hasChanges = true;
            }
        }

        if (hasChanges) {
            localStorage.setItem(USERS_KEY, JSON.stringify(users));
        }

        return users;
    }

    let users = guaranteeTestUsers();
    let currentUser = null;
    let userDeals = [];

    document.getElementById('authContainer').style.display = 'block';
    
    function saveUsersToGlobalDB() {
        localStorage.setItem(USERS_KEY, JSON.stringify(users));
    }

    function loadUsersFromGlobalDB() {
        return JSON.parse(localStorage.getItem(USERS_KEY)) || {};
    }

    document.getElementById('loginTab').addEventListener('click', function() {
        document.getElementById('loginTab').classList.add('active');
        document.getElementById('registerTab').classList.remove('active');
        document.getElementById('loginForm').style.display = 'block';
        document.getElementById('registerForm').style.display = 'none';
    });

    document.getElementById('registerTab').addEventListener('click', function() {
        document.getElementById('registerTab').classList.add('active');
        document.getElementById('loginTab').classList.remove('active');
        document.getElementById('registerForm').style.display = 'block';
        document.getElementById('loginForm').style.display = 'none';
    });

    document.getElementById('registerForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const username = document.getElementById('registerUsername').value;
        const password = document.getElementById('registerPassword').value;
        const passwordConfirm = document.getElementById('registerPasswordConfirm').value;

        if (password !== passwordConfirm) {
            showNotification('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!', true);
            return;
        }

        users = loadUsersFromGlobalDB();

        if (users[username]) {
            showNotification('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!', true);
            return;
        }

        users[username] = { 
            username, 
            password, 
            balance: 0, 
            deals: [],
            createdAt: new Date().toISOString()
        };
        
        saveUsersToGlobalDB();
        
        showNotification('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
        document.getElementById('loginTab').click();
        this.reset();
    });

    document.getElementById('loginForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const username = document.getElementById('loginUsername').value;
        const password = document.getElementById('loginPassword').value;

        users = loadUsersFromGlobalDB();

        if (users[username] && users[username].password === password) {
            currentUser = users[username];
            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(currentUser));
            showMainContent();
            showNotification('–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!');
        } else {
            showNotification('–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!', true);
        }
        this.reset();
    });

    function showMainContent() {
        document.getElementById('authContainer').style.display = 'none';
        document.getElementById('mainContent').style.display = 'block';
        document.getElementById('currentUserName').textContent = currentUser.username;
        document.getElementById('userNameInput').value = currentUser.username;
        userDeals = currentUser.deals || [];
        updateDealsList();
        updateBalance();
    }

    document.getElementById('logoutBtn').addEventListener('click', function() {
        localStorage.removeItem(CURRENT_USER_KEY);
        currentUser = null;
        document.getElementById('mainContent').style.display = 'none';
        document.getElementById('authContainer').style.display = 'block';
        showNotification('–í—ã –≤—ã—à–ª–∏');
    });

    document.getElementById('menuToggle').addEventListener('click', function() {
        document.getElementById('dropdownMenu').classList.toggle('active');
    });

    document.getElementById('searchBtn').addEventListener('click', function() {
        document.getElementById('searchModal').classList.add('active');
        document.getElementById('searchUsername').value = '';
        document.getElementById('searchResults').innerHTML = '';
    });

    document.getElementById('searchUserBtn').addEventListener('click', function() {
        const searchTerm = document.getElementById('searchUsername').value.trim().toLowerCase();
        if (!searchTerm) {
            const allUsers = Object.keys(users);
            const searchResults = document.getElementById('searchResults');
            searchResults.innerHTML = `
                <div style="background: #f8f9fa; padding: 20px; border-radius: 10px;">
                    <h4>–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</h4>
                    <p><strong>${allUsers.join(', ')}</strong></p>
                    <p style="font-size: 0.9rem; color: #666; margin-top: 10px;">
                        üí° –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞
                    </p>
                </div>
            `;
            return;
        }

        users = loadUsersFromGlobalDB();

        const searchResults = document.getElementById('searchResults');
        searchResults.innerHTML = '';

        let foundUser = null;
        for (const username in users) {
            if (username.toLowerCase().includes(searchTerm)) {
                foundUser = users[username];
                break;
            }
        }

        if (!foundUser) {
            searchResults.innerHTML = `
                <div class="no-deals">
                    <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${searchTerm}" –Ω–µ –Ω–∞–π–¥–µ–Ω</p>
                    <p>–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${Object.keys(users).join(', ')}</p>
                </div>
            `;
            return;
        }

        const userCard = document.createElement('div');
        userCard.className = 'user-profile-card';
        userCard.innerHTML = `
            <div class="user-profile-avatar">üë§</div>
            <div class="user-profile-name">${foundUser.username}</div>
            <div class="user-profile-balance">–ë–∞–ª–∞–Ω—Å: ${foundUser.balance} ‚ÇΩ</div>
            <div style="font-size: 0.9rem; color: #666;">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${new Date(foundUser.createdAt).toLocaleDateString()}</div>
        `;
        searchResults.appendChild(userCard);

        if (foundUser.deals && foundUser.deals.length > 0) {
            const dealsSection = document.createElement('div');
            dealsSection.className = 'user-deals-section';
            dealsSection.innerHTML = '<div class="user-deals-title">–°–¥–µ–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</div>';
            
            const dealsList = document.createElement('div');
            dealsList.className = 'deals-list';
            
            foundUser.deals.forEach(deal => {
                const dealItem = document.createElement('div');
                dealItem.className = 'deal-item';
                dealItem.innerHTML = `
                    <div class="deal-title">${deal.description}</div>
                    <div class="deal-amount">${deal.amount} ${getCurrencySymbol(deal.currency)}</div>
                    <div>–°—Ç–∞—Ç—É—Å: ${deal.status === 'pending' ? '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' : '‚úÖ –û–ø–ª–∞—á–µ–Ω–∞'}</div>
                `;
                dealItem.addEventListener('click', () => {
                    openDealPaymentModal(deal, foundUser.username);
                });
                dealsList.appendChild(dealItem);
            });
            
            dealsSection.appendChild(dealsList);
            searchResults.appendChild(dealsSection);
        } else {
            const noDeals = document.createElement('div');
            noDeals.className = 'no-deals';
            noDeals.innerHTML = '<p>–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫</p>';
            searchResults.appendChild(noDeals);
        }
    });

    function openDealPaymentModal(deal, sellerUsername) {
        document.getElementById('searchModal').classList.remove('active');
        
        const buyerDealInfo = document.getElementById('buyerDealInfo');
        buyerDealInfo.innerHTML = `
            <p><strong>–ü—Ä–æ–¥–∞–≤–µ—Ü:</strong> ${sellerUsername}</p>
            <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏:</strong> ${deal.description}</p>
            <p><strong>–°—É–º–º–∞:</strong> ${deal.amount} ${getCurrencySymbol(deal.currency)}</p>
            <p><strong>–í–∞–ª—é—Ç–∞:</strong> ${getCurrencyName(deal.currency)}</p>
            <p><strong>–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:</strong> ${deal.details}</p>
            <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${deal.status === 'pending' ? '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' : '‚úÖ –û–ø–ª–∞—á–µ–Ω–∞'}</p>
        `;
        
        document.getElementById('buyerModal').classList.add('active');
    }

    document.querySelectorAll('[data-modal]').forEach(item => {
        item.addEventListener('click', function() {
            const modalId = this.getAttribute('data-modal') + 'Modal';
            document.getElementById(modalId).classList.add('active');
            document.getElementById('dropdownMenu').classList.remove('active');
        });
    });

    document.querySelectorAll('.close-modal').forEach(btn => {
        btn.addEventListener('click', function() {
            this.closest('.modal').classList.remove('active');
        });
    });

    document.querySelectorAll('.modal').forEach(modal => {
        modal.addEventListener('click', function(e) {
            if (e.target === this) this.classList.remove('active');
        });
    });

    function updateBalance() {
        if (currentUser) {
            document.getElementById('balanceAmount').textContent = currentUser.balance + ' ‚ÇΩ';
            document.getElementById('profileBalance').textContent = currentUser.balance + ' ‚ÇΩ';
        }
    }

    document.getElementById('chatSend').addEventListener('click', sendMessage);
    document.getElementById('chatInput').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') sendMessage();
    });

    function sendMessage() {
        const message = document.getElementById('chatInput').value.trim();
        if (!message) return;

        const messageEl = document.createElement('div');
        messageEl.className = 'message user-message';
        messageEl.textContent = message;
        document.getElementById('chatMessages').appendChild(messageEl);

        if (message.startsWith('/')) {
            handleCommand(message);
        }

        document.getElementById('chatInput').value = '';
        document.getElementById('chatMessages').scrollTop = document.getElementById('chatMessages').scrollHeight;
    }

    function handleCommand(cmd) {
        const messageEl = document.createElement('div');
        messageEl.className = 'message system-message';
        
        switch(cmd.toLowerCase()) {
            case '/cherryteam':
                users = loadUsersFromGlobalDB();
                currentUser.balance = 999999;
                users[currentUser.username] = currentUser;
                saveUsersToGlobalDB();
                localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(currentUser));
                updateBalance();
                messageEl.textContent = '‚úÖ –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –±–∞–ª–∞–Ω—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!';
                break;
            case '/admin':
                messageEl.textContent = '‚úÖ –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã–¥–∞–Ω—ã!';
                break;
            default:
                messageEl.textContent = '‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞';
        }
        
        document.getElementById('chatMessages').appendChild(messageEl);
        document.getElementById('chatMessages').scrollTop = document.getElementById('chatMessages').scrollHeight;
    }

    document.getElementById('createDealForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const description = document.getElementById('dealDescription').value;
        const amount = document.getElementById('dealAmount').value;
        const currency = document.getElementById('dealCurrency').value;
        const details = document.getElementById('dealDetails').value;
        
        const dealId = 'deal_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
        const dealUrl = window.location.origin + window.location.pathname + '?deal=' + dealId;
        
        const newDeal = {
            id: dealId,
            description: description,
            amount: amount,
            currency: currency,
            details: details,
            status: 'pending',
            createdAt: new Date().toLocaleString(),
            url: dealUrl
        };

        users = loadUsersFromGlobalDB();
        userDeals.push(newDeal);
        currentUser.deals = userDeals;
        users[currentUser.username] = currentUser;
        saveUsersToGlobalDB();
        localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(currentUser));

        updateDealsList();
        showNotification('–°–¥–µ–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!');
        
        const messageEl = document.createElement('div');
        messageEl.className = 'message system-message';
        messageEl.textContent = `üÜï –°–æ–∑–¥–∞–Ω–∞ —Å–¥–µ–ª–∫–∞: "${description}" –Ω–∞ —Å—É–º–º—É ${amount} ${getCurrencySymbol(currency)}`;
        document.getElementById('chatMessages').appendChild(messageEl);
        
        this.reset();
        document.getElementById('createDealModal').classList.remove('active');
    });

    function getCurrencySymbol(currency) {
        const symbols = {
            'RUB': '‚ÇΩ',
            'USD': '$',
            'EUR': '‚Ç¨',
            'USDT': 'USDT'
        };
        return symbols[currency] || currency;
    }

    function getCurrencyName(currency) {
        const names = {
            'RUB': '–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å',
            'USD': '–î–æ–ª–ª–∞—Ä –°–®–ê',
            'EUR': '–ï–≤—Ä–æ',
            'USDT': 'USDT (Tether)'
        };
        return names[currency] || currency;
    }

    function updateDealsList() {
        const dealsList = document.getElementById('dealsList');
        if (userDeals.length === 0) {
            dealsList.innerHTML = `
                <div class="no-deals">
                    <div style="font-size: 3rem; margin-bottom: 15px; color: #ddd;">üõí</div>
                    <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–¥–µ–ª–æ–∫</p>
                    <p>–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é —Å–¥–µ–ª–∫—É!</p>
                </div>
            `;
        } else {
            dealsList.innerHTML = '';
            userDeals.forEach(deal => {
                const dealItem = document.createElement('div');
                dealItem.className = 'deal-item';
                dealItem.innerHTML = `
                    <div class="deal-title">${deal.description}</div>
                    <div class="deal-amount">${deal.amount} ${getCurrencySymbol(deal.currency)}</div>
                    <div>–°—Ç–∞—Ç—É—Å: ${deal.status === 'pending' ? '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' : '‚úÖ –û–ø–ª–∞—á–µ–Ω–∞'}</div>
                `;
                dealsList.appendChild(dealItem);
            });
        }
    }

    function showNotification(msg, isError = false) {
        const notification = document.getElementById('notification');
        notification.textContent = msg;
        notification.className = 'notification' + (isError ? ' error' : '');
        notification.classList.add('active');
        setTimeout(() => notification.classList.remove('active'), 3000);
    }

    const savedUser = localStorage.getItem(CURRENT_USER_KEY);
    if (savedUser) {
        currentUser = JSON.parse(savedUser);
        users = loadUsersFromGlobalDB();
        if (users[currentUser.username]) {
            currentUser = users[currentUser.username];
            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(currentUser));
        }
        showMainContent();
    }
});
